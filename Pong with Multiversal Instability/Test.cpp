// Generated with Python
struct Point reflectTests[] = {
	{1.0, 0.0}, {1.0, 0.0}, {1.0, 0.0},
	{0.809017, 0.587785}, {1.0, 0.0}, {0.809017, -0.587785},
	{0.309017, 0.951057}, {1.0, 0.0}, {0.309017, -0.951057},
	{-0.309017, 0.951057}, {1.0, 0.0}, {-0.309017, -0.951057},
	{-0.809017, 0.587785}, {1.0, 0.0}, {-0.809017, -0.587785},
	{-1.0, 0.0}, {1.0, 0.0}, {-1.0, -0.0},
	{-0.809017, -0.587785}, {1.0, 0.0}, {-0.809017, 0.587785},
	{-0.309017, -0.951057}, {1.0, 0.0}, {-0.309017, 0.951057},
	{0.309017, -0.951057}, {1.0, 0.0}, {0.309017, 0.951057},
	{0.809017, -0.587785}, {1.0, 0.0}, {0.809017, 0.587785},
	{1.0, 0.0}, {0.809017, 0.587785}, {0.309017, 0.951057},
	{0.809017, 0.587785}, {0.809017, 0.587785}, {0.809017, 0.587785},
	{0.309017, 0.951057}, {0.809017, 0.587785}, {1.0, 0.0},
	{-0.309017, 0.951057}, {0.809017, 0.587785}, {0.809017, -0.587785},
	{-0.809017, 0.587785}, {0.809017, 0.587785}, {0.309017, -0.951057},
	{-1.0, 0.0}, {0.809017, 0.587785}, {-0.309017, -0.951057},
	{-0.809017, -0.587785}, {0.809017, 0.587785}, {-0.809017, -0.587785},
	{-0.309017, -0.951057}, {0.809017, 0.587785}, {-1.0, -0.0},
	{0.309017, -0.951057}, {0.809017, 0.587785}, {-0.809017, 0.587785},
	{0.809017, -0.587785}, {0.809017, 0.587785}, {-0.309017, 0.951057},
	{1.0, 0.0}, {0.309017, 0.951057}, {-0.809017, 0.587785},
	{0.809017, 0.587785}, {0.309017, 0.951057}, {-0.309017, 0.951057},
	{0.309017, 0.951057}, {0.309017, 0.951057}, {0.309017, 0.951057},
	{-0.309017, 0.951057}, {0.309017, 0.951057}, {0.809017, 0.587785},
	{-0.809017, 0.587785}, {0.309017, 0.951057}, {1.0, 0.0},
	{-1.0, 0.0}, {0.309017, 0.951057}, {0.809017, -0.587785},
	{-0.809017, -0.587785}, {0.309017, 0.951057}, {0.309017, -0.951057},
	{-0.309017, -0.951057}, {0.309017, 0.951057}, {-0.309017, -0.951057},
	{0.309017, -0.951057}, {0.309017, 0.951057}, {-0.809017, -0.587785},
	{0.809017, -0.587785}, {0.309017, 0.951057}, {-1.0, -0.0},
	{1.0, 0.0}, {-0.309017, 0.951057}, {-0.809017, -0.587785},
	{0.809017, 0.587785}, {-0.309017, 0.951057}, {-1.0, 0.0},
	{0.309017, 0.951057}, {-0.309017, 0.951057}, {-0.809017, 0.587785},
	{-0.309017, 0.951057}, {-0.309017, 0.951057}, {-0.309017, 0.951057},
	{-0.809017, 0.587785}, {-0.309017, 0.951057}, {0.309017, 0.951057},
	{-1.0, 0.0}, {-0.309017, 0.951057}, {0.809017, 0.587785},
	{-0.809017, -0.587785}, {-0.309017, 0.951057}, {1.0, 0.0},
	{-0.309017, -0.951057}, {-0.309017, 0.951057}, {0.809017, -0.587785},
	{0.309017, -0.951057}, {-0.309017, 0.951057}, {0.309017, -0.951057},
	{0.809017, -0.587785}, {-0.309017, 0.951057}, {-0.309017, -0.951057},
	{1.0, 0.0}, {-0.809017, 0.587785}, {0.309017, -0.951057},
	{0.809017, 0.587785}, {-0.809017, 0.587785}, {-0.309017, -0.951057},
	{0.309017, 0.951057}, {-0.809017, 0.587785}, {-0.809017, -0.587785},
	{-0.309017, 0.951057}, {-0.809017, 0.587785}, {-1.0, 0.0},
	{-0.809017, 0.587785}, {-0.809017, 0.587785}, {-0.809017, 0.587785},
	{-1.0, 0.0}, {-0.809017, 0.587785}, {-0.309017, 0.951057},
	{-0.809017, -0.587785}, {-0.809017, 0.587785}, {0.309017, 0.951057},
	{-0.309017, -0.951057}, {-0.809017, 0.587785}, {0.809017, 0.587785},
	{0.309017, -0.951057}, {-0.809017, 0.587785}, {1.0, 0.0},
	{0.809017, -0.587785}, {-0.809017, 0.587785}, {0.809017, -0.587785},
	{1.0, 0.0}, {-1.0, 0.0}, {1.0, -0.0},
	{0.809017, 0.587785}, {-1.0, 0.0}, {0.809017, -0.587785},
	{0.309017, 0.951057}, {-1.0, 0.0}, {0.309017, -0.951057},
	{-0.309017, 0.951057}, {-1.0, 0.0}, {-0.309017, -0.951057},
	{-0.809017, 0.587785}, {-1.0, 0.0}, {-0.809017, -0.587785},
	{-1.0, 0.0}, {-1.0, 0.0}, {-1.0, 0.0},
	{-0.809017, -0.587785}, {-1.0, 0.0}, {-0.809017, 0.587785},
	{-0.309017, -0.951057}, {-1.0, 0.0}, {-0.309017, 0.951057},
	{0.309017, -0.951057}, {-1.0, 0.0}, {0.309017, 0.951057},
	{0.809017, -0.587785}, {-1.0, 0.0}, {0.809017, 0.587785},
	{1.0, 0.0}, {-0.809017, -0.587785}, {0.309017, 0.951057},
	{0.809017, 0.587785}, {-0.809017, -0.587785}, {0.809017, 0.587785},
	{0.309017, 0.951057}, {-0.809017, -0.587785}, {1.0, -0.0},
	{-0.309017, 0.951057}, {-0.809017, -0.587785}, {0.809017, -0.587785},
	{-0.809017, 0.587785}, {-0.809017, -0.587785}, {0.309017, -0.951057},
	{-1.0, 0.0}, {-0.809017, -0.587785}, {-0.309017, -0.951057},
	{-0.809017, -0.587785}, {-0.809017, -0.587785}, {-0.809017, -0.587785},
	{-0.309017, -0.951057}, {-0.809017, -0.587785}, {-1.0, 0.0},
	{0.309017, -0.951057}, {-0.809017, -0.587785}, {-0.809017, 0.587785},
	{0.809017, -0.587785}, {-0.809017, -0.587785}, {-0.309017, 0.951057},
	{1.0, 0.0}, {-0.309017, -0.951057}, {-0.809017, 0.587785},
	{0.809017, 0.587785}, {-0.309017, -0.951057}, {-0.309017, 0.951057},
	{0.309017, 0.951057}, {-0.309017, -0.951057}, {0.309017, 0.951057},
	{-0.309017, 0.951057}, {-0.309017, -0.951057}, {0.809017, 0.587785},
	{-0.809017, 0.587785}, {-0.309017, -0.951057}, {1.0, -0.0},
	{-1.0, 0.0}, {-0.309017, -0.951057}, {0.809017, -0.587785},
	{-0.809017, -0.587785}, {-0.309017, -0.951057}, {0.309017, -0.951057},
	{-0.309017, -0.951057}, {-0.309017, -0.951057}, {-0.309017, -0.951057},
	{0.309017, -0.951057}, {-0.309017, -0.951057}, {-0.809017, -0.587785},
	{0.809017, -0.587785}, {-0.309017, -0.951057}, {-1.0, 0.0},
	{1.0, 0.0}, {0.309017, -0.951057}, {-0.809017, -0.587785},
	{0.809017, 0.587785}, {0.309017, -0.951057}, {-1.0, 0.0},
	{0.309017, 0.951057}, {0.309017, -0.951057}, {-0.809017, 0.587785},
	{-0.309017, 0.951057}, {0.309017, -0.951057}, {-0.309017, 0.951057},
	{-0.809017, 0.587785}, {0.309017, -0.951057}, {0.309017, 0.951057},
	{-1.0, 0.0}, {0.309017, -0.951057}, {0.809017, 0.587785},
	{-0.809017, -0.587785}, {0.309017, -0.951057}, {1.0, -0.0},
	{-0.309017, -0.951057}, {0.309017, -0.951057}, {0.809017, -0.587785},
	{0.309017, -0.951057}, {0.309017, -0.951057}, {0.309017, -0.951057},
	{0.809017, -0.587785}, {0.309017, -0.951057}, {-0.309017, -0.951057},
	{1.0, 0.0}, {0.809017, -0.587785}, {0.309017, -0.951057},
	{0.809017, 0.587785}, {0.809017, -0.587785}, {-0.309017, -0.951057},
	{0.309017, 0.951057}, {0.809017, -0.587785}, {-0.809017, -0.587785},
	{-0.309017, 0.951057}, {0.809017, -0.587785}, {-1.0, 0.0},
	{-0.809017, 0.587785}, {0.809017, -0.587785}, {-0.809017, 0.587785},
	{-1.0, 0.0}, {0.809017, -0.587785}, {-0.309017, 0.951057},
	{-0.809017, -0.587785}, {0.809017, -0.587785}, {0.309017, 0.951057},
	{-0.309017, -0.951057}, {0.809017, -0.587785}, {0.809017, 0.587785},
	{0.309017, -0.951057}, {0.809017, -0.587785}, {1.0, -0.0},
	{0.809017, -0.587785}, {0.809017, -0.587785}, {0.809017, -0.587785},
};


void test() {
	for (int i = 0; i < sizeof(reflectTests) / sizeof(struct Point); i += 3) {
		struct Point incident = reflectTests[i];
		struct Point normal = reflectTests[i + 1];
		
		struct Point expected_reflection = reflectTests[i + 2];
		struct Point observed_reflection = reflect(incident, normal);
		if (!approximates(expected_reflection, observed_reflection, 0.001)) {
			std::cerr << "Error on reflection test " << i << ": reflect " << incident << " over " << normal
				<< ": Expected " << expected_reflection << " but got " << observed_reflection << "." << std::endl;
		}

		expected_reflection = reflectTests[i + 2] * 3.7;
		observed_reflection = reflect(incident * 3.7, normal);
		if (!approximates(expected_reflection, observed_reflection, 0.001)) {
			std::cerr << "Error on reflection test " << i << " * 3.7: reflect " << incident << " over " << normal
				<< ": Expected " << expected_reflection << " but got " << observed_reflection << "." << std::endl;
		}
	}
}